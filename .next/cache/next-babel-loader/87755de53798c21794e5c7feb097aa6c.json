{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\13054\\\\Documents\\\\GitHub\\\\OniDev\\\\components\\\\cards\\\\card.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { Card, CardText, CardTitle, Col, Row, CardImg, CardBody, Badge } from 'reactstrap';\nimport { packageImages } from '../../data/image_source';\nimport './card.scss';\nimport Loader from 'react-loader-spinner'; //p = props\n\nexport const CardComp = props => {\n  const {\n    0: loading,\n    1: setloading\n  } = useState(true);\n  useEffect(() => {\n    console.log();\n  }, [loading]);\n  const p = props;\n\n  if (!loading) {\n    return __jsx(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, __jsx(CardImg, {\n      top: true,\n      onLoad: () => {\n        setloading(false);\n      },\n      width: \"100%\",\n      src: packageImages.map((image, index) => {\n        let packageTitle = p.title.toLowerCase();\n\n        if (packageTitle.includes(image.uID)) {\n          return image.src;\n        } else {\n          console.log(p.title, image.uID);\n        }\n      }),\n      alt: \"Card image cap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }), __jsx(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, __jsx(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, p.title), __jsx(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, p.text, __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }), p.addOns.map(addOn => __jsx(Badge, {\n      color: \"primary\",\n      pill: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }, addOn))), ' '));\n  } else {\n    return __jsx(Loader, {\n      type: \"Triangle\",\n      color: \"#e100ff \",\n      height: 50,\n      width: 50,\n      timeout: 3000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/13054/Documents/GitHub/OniDev/components/cards/card.js"],"names":["React","useEffect","useState","Card","CardText","CardTitle","Col","Row","CardImg","CardBody","Badge","packageImages","Loader","CardComp","props","loading","setloading","console","log","p","map","image","index","packageTitle","title","toLowerCase","includes","uID","src","text","addOns","addOn"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,GAApC,EAAyCC,GAAzC,EAA6CC,OAA7C,EAAqDC,QAArD,EAA8DC,KAA9D,QAA2E,YAA3E;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,OAAO,aAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACjC,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBd,QAAQ,CAAC,IAAD,CAAtC;AACED,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,OAAO,CAACC,GAAR;AACH,GAFQ,EAEN,CAACH,OAAD,CAFM,CAAT;AAGH,QAAMI,CAAC,GAAGL,KAAV;;AAEC,MAAI,CAACC,OAAL,EAAc;AACZ,WACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,OAAD;AACE,MAAA,GAAG,MADL;AAEE,MAAA,MAAM,EAAE,MAAM;AAEZC,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OALH;AAME,MAAA,KAAK,EAAC,MANR;AAOE,MAAA,GAAG,EAAEL,aAAa,CAACS,GAAd,CAAkB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACvC,YAAIC,YAAY,GAAGJ,CAAC,CAACK,KAAF,CAAQC,WAAR,EAAnB;;AACA,YAAIF,YAAY,CAACG,QAAb,CAAsBL,KAAK,CAACM,GAA5B,CAAJ,EAAsC;AACpC,iBAAON,KAAK,CAACO,GAAb;AACD,SAFD,MAEO;AACLX,UAAAA,OAAO,CAACC,GAAR,CAAYC,CAAC,CAACK,KAAd,EAAqBH,KAAK,CAACM,GAA3B;AACD;AACF,OAPI,CAPP;AAeE,MAAA,GAAG,EAAC,gBAfN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAkBE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYR,CAAC,CAACK,KAAd,CADF,EAEE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,CAAC,CAACU,IADL,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGGV,CAAC,CAACW,MAAF,CAASV,GAAT,CAAcW,KAAD,IACZ,MAAC,KAAD;AAAO,MAAA,KAAK,EAAC,SAAb;AAAuB,MAAA,IAAI,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,KADH,CADD,CAHH,CAFF,EAUc,GAVd,CAlBF,CADF;AAiCD,GAlCD,MAkCO;AACL,WAAQ,MAAC,MAAD;AACN,MAAA,IAAI,EAAC,UADC;AAEN,MAAA,KAAK,EAAC,UAFA;AAGN,MAAA,MAAM,EAAE,EAHF;AAIN,MAAA,KAAK,EAAE,EAJD;AAKN,MAAA,OAAO,EAAE,IALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AAQD;AACF,CAnDM","sourcesContent":["import React,{useEffect,useState} from 'react';\r\nimport { Card, CardText, CardTitle, Col, Row,CardImg,CardBody,Badge } from 'reactstrap';\r\nimport { packageImages } from '../../data/image_source';\r\nimport './card.scss';\r\nimport Loader from 'react-loader-spinner';\r\n\r\n//p = props\r\nexport const CardComp = (props) => {\r\n  const [loading, setloading] = useState(true)\r\n    useEffect(() => {\r\n        console.log()\r\n    }, [loading])\r\n const p = props\r\n \r\n  if (!loading) {\r\n    return (\r\n      <Card>\r\n        <CardImg\r\n          top\r\n          onLoad={() => {\r\n            \r\n            setloading(false)\r\n          }}\r\n          width=\"100%\"\r\n          src={packageImages.map((image, index) => {\r\n            let packageTitle = p.title.toLowerCase();\r\n            if (packageTitle.includes(image.uID)) {\r\n              return image.src;\r\n            } else {\r\n              console.log(p.title, image.uID);\r\n            }\r\n          })}\r\n          alt=\"Card image cap\"\r\n        />\r\n        <CardBody>\r\n          <CardTitle>{p.title}</CardTitle>\r\n          <CardText>\r\n            {p.text}\r\n            <br />\r\n            {p.addOns.map((addOn) => (\r\n              <Badge color=\"primary\" pill>\r\n                {addOn}\r\n              </Badge>\r\n            ))}\r\n          </CardText>{' '}\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  } else {\r\n    return (<Loader\r\n      type=\"Triangle\"\r\n      color=\"#e100ff \"\r\n      height={50}\r\n      width={50}\r\n      timeout={3000}\r\n    />);\r\n    \r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}