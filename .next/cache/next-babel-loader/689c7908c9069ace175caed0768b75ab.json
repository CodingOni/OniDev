{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\13054\\\\Documents\\\\GitHub\\\\OniDev\\\\components\\\\cards\\\\card.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { Card, CardText, CardTitle, Col, Row, CardImg, CardBody, Badge } from 'reactstrap';\nimport { packageImages } from '../../data/image_source';\nimport './card.scss';\nimport Loader from 'react-loader-spinner';\n\nconst domLoaded = require('dom-loaded'); //p = props\n\n\nexport const CardComp = props => {\n  const {\n    0: loading,\n    1: setloading\n  } = useState(true);\n  const {\n    0: imageloading,\n    1: setimageloading\n  } = useState(true);\n  useEffect(() => {\n    (async () => {\n      await domLoaded;\n      setloading(false);\n    })();\n  }, [loading]);\n  const p = props;\n\n  if (!loading) {\n    return __jsx(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, __jsx(CardImg, {\n      top: true,\n      onLoad: () => {\n        setimageloading(false);\n      },\n      width: \"100%\",\n      src: packageImages.map((image, index) => {\n        let packageTitle = p.title.toLowerCase();\n\n        if (packageTitle.includes(image.uID)) {\n          return image.src;\n        } else {\n          console.log(p.title, image.uID);\n        }\n      }),\n      alt: \"Card image cap\",\n      className: !imageloading ? '' : 'display-none',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }), imageloading && __jsx(\"div\", {\n      className: \"image-loader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 10\n      }\n    }, \" \", __jsx(Loader, {\n      type: \"Triangle\",\n      color: \"#e100ff \",\n      height: 50,\n      width: 50,\n      timeout: 99000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 41\n      }\n    })), __jsx(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, __jsx(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, p.title), __jsx(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, p.text, __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }), p.addOns.map(addOn => __jsx(Badge, {\n      color: \"primary\",\n      pill: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, addOn))), ' '));\n  } else {\n    return __jsx(\"div\", {\n      className: \"theme-loader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, __jsx(Loader, {\n      type: \"Triangle\",\n      color: \"#e100ff \",\n      height: 50,\n      width: 50,\n      timeout: 3000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }));\n  }\n};","map":{"version":3,"sources":["C:/Users/13054/Documents/GitHub/OniDev/components/cards/card.js"],"names":["React","useEffect","useState","Card","CardText","CardTitle","Col","Row","CardImg","CardBody","Badge","packageImages","Loader","domLoaded","require","CardComp","props","loading","setloading","imageloading","setimageloading","p","map","image","index","packageTitle","title","toLowerCase","includes","uID","src","console","log","text","addOns","addOn"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react';\r\nimport { Card, CardText, CardTitle, Col, Row,CardImg,CardBody,Badge } from 'reactstrap';\r\nimport { packageImages } from '../../data/image_source';\r\nimport './card.scss';\r\nimport Loader from 'react-loader-spinner';\r\nconst domLoaded = require('dom-loaded');\r\n\r\n//p = props\r\nexport const CardComp = (props) => {\r\n  const [loading, setloading] = useState(true)\r\n    const [imageloading, setimageloading] = useState(true);\r\n\r\n    useEffect(() => {\r\n       (async () => {\r\n         await domLoaded;\r\n         setloading(false)\r\n       })();\r\n    }, [loading])\r\n const p = props\r\n \r\n  if (!loading) {\r\n    return (\r\n      <Card>\r\n        <CardImg\r\n          top\r\n          onLoad={() => {\r\n            setimageloading(false);\r\n          }}\r\n          width=\"100%\"\r\n          src={packageImages.map((image, index) => {\r\n            let packageTitle = p.title.toLowerCase();\r\n            if (packageTitle.includes(image.uID)) {\r\n              return image.src;\r\n            } else {\r\n              console.log(p.title, image.uID);\r\n            }\r\n          })}\r\n          alt=\"Card image cap\"\r\n          className={!imageloading ? '' : 'display-none'}\r\n        />\r\n        {imageloading && (\r\n         <div className=\"image-loader\"> <Loader\r\n            type=\"Triangle\"\r\n            color=\"#e100ff \"\r\n            height={50}\r\n            width={50}\r\n            timeout={99000}\r\n          /></div>\r\n        )}\r\n        <CardBody>\r\n          <CardTitle>{p.title}</CardTitle>\r\n          <CardText>\r\n            {p.text}\r\n            <br />\r\n            {p.addOns.map((addOn) => (\r\n              <Badge color=\"primary\" pill>\r\n                {addOn}\r\n              </Badge>\r\n            ))}\r\n          </CardText>{' '}\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"theme-loader\">\r\n        <Loader\r\n          type=\"Triangle\"\r\n          color=\"#e100ff \"\r\n          height={50}\r\n          width={50}\r\n          timeout={3000}\r\n        />\r\n      </div>\r\n    );\r\n    \r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}