{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useContext } from 'react';\nimport { Card, CardText, CardTitle, Col, Row, CardImg, CardBody, Badge } from 'reactstrap';\nimport './card.scss';\nimport Loader from 'react-loader-spinner';\nimport { ProductContext } from '../../pages/oniContext';\n\nconst domLoaded = require('dom-loaded'); //p = props\n\n\nexport const CardComp = props => {\n  const productConsumer = useContext(ProductContext);\n  const {\n    0: loading,\n    1: setloading\n  } = useState(true);\n  const {\n    0: imageloading,\n    1: setimageloading\n  } = useState(true);\n\n  const handleImages = imageName => {\n    packageImages.map((image, index) => {\n      let packageTitle = p.title.toLowerCase();\n\n      if (packageTitle.includes(image.uID)) {\n        return image.src;\n      } else {\n        console.log(p.title, image.uID);\n      }\n\n      switch (imageName) {\n        case value:\n          break;\n\n        default:\n          break;\n      }\n    });\n  };\n\n  useEffect(() => {\n    (async () => {\n      await domLoaded;\n      setloading(false);\n    })();\n  }, [loading]);\n  const p = props;\n\n  if (!loading) {\n    return __jsx(Card, null, __jsx(CardImg, {\n      top: true,\n      onLoad: () => {\n        setimageloading(false);\n      },\n      width: \"100%\",\n      src: p.image,\n      alt: \"Card image cap\",\n      className: !imageloading ? '' : 'display-none'\n    }), imageloading && __jsx(\"div\", {\n      className: \"image-loader\"\n    }, ' ', __jsx(Loader, {\n      type: \"Triangle\",\n      color: \"#e100ff \",\n      height: 50,\n      width: 50,\n      timeout: 99000\n    })), __jsx(CardBody, {\n      className: \"text-center\"\n    }, __jsx(CardTitle, null, p.title), __jsx(CardText, null, p.text, __jsx(\"br\", null), __jsx(\"span\", {\n      className: \"text-center\"\n    }, p.addOns.map((addOn, index) => __jsx(Badge, {\n      key: index,\n      className: \"badge\",\n      color: \"primary\",\n      pill: true\n    }, addOn))), __jsx(\"button\", {\n      onClick: () => productConsumer.handleFinalPackage(p.package)\n    }, ' ', \"click me\", ' ')), ' '));\n  } else {\n    return __jsx(\"div\", {\n      className: \"theme-loader\"\n    }, __jsx(Loader, {\n      type: \"Triangle\",\n      color: \"#e100ff \",\n      height: 50,\n      width: 50,\n      timeout: 3000\n    }));\n  }\n};","map":null,"metadata":{},"sourceType":"module"}