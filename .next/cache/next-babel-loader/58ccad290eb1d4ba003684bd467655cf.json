{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport emailjs from 'emailjs-com';\nimport { SelectPackage } from '../components/selectPackage'; //Function Order From earliest to latest\n\nimport { webAppPackages, mobileAppPackages, softwareDeveleopmentPackages, seoMarketingPackages, webAddOns, appAddOns, dataAddOns, scriptingAddOns, marketingAddOns } from '../data/business-services/index';\nconst ProductContext = React.createContext();\nconst ratePerHour = 50;\nlet initstate = {\n  name: '',\n  number: '',\n  message: '',\n  email: '',\n  messageSent: false,\n  errors: {},\n  addOns: [],\n  moreInfoNeeded: true,\n  isModalOpen: false,\n  activePackage: [],\n  activeAddOns: [],\n  finalPackage: {},\n  finalAddOns: [],\n  progress: 0,\n  total: 0,\n  hours: 0\n};\nexport default class ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      name: '',\n      number: '',\n      message: '',\n      email: '',\n      messageSent: false,\n      errors: {},\n      addOns: [],\n      moreInfoNeeded: true,\n      isModalOpen: false,\n      activeAddOns: [],\n      activePackage: [],\n      finalPackage: {},\n      finalAddOns: [],\n      progress: 0,\n      hours: 0,\n      total: 0\n    });\n\n    _defineProperty(this, \"setThemeColor\", color => {\n      switch (color) {\n        case 'blue':\n          document.body.style.setProperty('--primary', 'linear-gradient(to right, #33ccff 0%, #3366ff 100%)');\n          document.body.style.setProperty('--primary1', '#3366ff');\n          document.body.style.setProperty('--primary2', '#33ccff');\n          document.body.style.setProperty('--primary3', 'rgba(52, 106, 255, 0.1)');\n          document.body.style.setProperty('--bannerimg', 'url(/assets/images/banner/bg1.png)');\n          break;\n\n        case 'green':\n          document.body.style.setProperty('--primary', 'linear-gradient(to right, #184e68 0%, #57ca85 100%)');\n          document.body.style.setProperty('--primary1', '#57ca85');\n          document.body.style.setProperty('--primary2', '#184e68');\n          document.body.style.setProperty('--primary3', 'rgba(24, 78, 104, 0.1)');\n          document.body.style.setProperty('--bannerimg', 'url(/assets/images/banner/bg4.png)');\n          break;\n\n        default:\n          break;\n      }\n    });\n\n    _defineProperty(this, \"progressIncrement\", incrBy => {\n      if (this.state.progress < 99.99) {\n        this.setState({\n          progress: this.state.progress + incrBy\n        });\n      } else {\n        return;\n      }\n    });\n\n    _defineProperty(this, \"selectAddOn\", addOn => {\n      if (this.state.addOns.includes(addOn.title)) {\n        console.warn(\"Found\");\n        this.state.addOns.pop(addOn.title);\n        this.setState({\n          hours: this.state.hours - addOn.hours\n        });\n      } else {\n        this.state.addOns.push(addOn.title);\n        this.setState({\n          hours: this.state.hours + addOn.hours\n        });\n      }\n\n      setTimeout(() => {\n        console.log(this.state.addOns, this.state.hours);\n      }, 300);\n    });\n\n    _defineProperty(this, \"progressDecrement\", decrBy => {\n      if (this.state.progress > 0) {\n        this.setState({\n          progress: this.state.progress - decrBy\n        });\n      } else {\n        return;\n      }\n    });\n\n    _defineProperty(this, \"handleFinalPackage\", servicePackage => {\n      this.setState({\n        finalPackage: servicePackage\n      });\n      this.progressIncrement(33.33);\n      {\n        servicePackage.addOns.map((addOn, index) => {\n          if (this.state.addOns.includes(addOn)) {\n            return;\n          } else {\n            this.state.addOns.push(addOn);\n          }\n        });\n      }\n      setTimeout(() => {\n        console.log(this.state.finalPackage, this.state.addOns);\n      }, 300);\n    });\n\n    _defineProperty(this, \"handleActiveAddOns\", packageName => {\n      switch (packageName) {\n        case 'webPackages':\n          this.setState({\n            activeAddOns: webAddOns\n          });\n          break;\n\n        case 'mobileAppPackages':\n          this.setState({\n            activeAddOns: appAddOns\n          });\n          break;\n\n        case 'scriptingPackages':\n          this.setState({\n            activeAddOns: scriptingAddOns\n          });\n          break;\n\n        case 'marketingPackages':\n          this.setState({\n            activeAddOns: marketingAddOns\n          });\n          break;\n\n        case 'dataPackages':\n          this.setState({\n            activeAddOns: dataAddOns\n          });\n          break;\n\n        default:\n          console.error('No packages Found');\n      }\n\n      setTimeout(() => {\n        console.log(this.state.activeAddOns);\n      }, 300);\n    });\n\n    _defineProperty(this, \"handleActivePackage\", packageName => {\n      switch (packageName) {\n        case 'webPackages':\n          this.setState({\n            activePackage: webAppPackages\n          });\n          break;\n\n        case 'mobileAppPackages':\n          this.setState({\n            activePackage: mobileAppPackages\n          });\n          break;\n\n        case 'softwareDevelopmentPackages':\n          this.setState({\n            activePackage: softwareDeveleopmentPackages\n          });\n          break;\n\n        case 'seoMarketingPackages':\n          this.setState({\n            activePackage: seoMarketingPackages\n          });\n          break;\n\n        default: // code block\n\n      }\n\n      setTimeout(() => {\n        console.log(this.state.activePackage);\n      }, 300);\n    });\n\n    _defineProperty(this, \"handleModal\", e => {\n      this.setState({\n        isModalOpen: !this.state.isModalOpen\n      });\n    });\n\n    _defineProperty(this, \"sendEmail\", e => {\n      this.handleErrors();\n\n      if (!this.state.errors) {\n        console.log(this.state);\n        emailjs.send('OniDev', 'onidev', {\n          senderEmail: this.state.email,\n          senderName: this.state.name,\n          senderMessage: this.state.message,\n          senderPhoneNumber: this.state.number,\n          receiverEmail: 'tyriquedaniel14@gmail.com',\n          number: 0,\n          total: '10000',\n          addOns: 'Everything'\n        }, 'user_ra9kLqa47SSFhb4QI3Swp').then(result => {\n          console.log(result.text);\n          this.setState({\n            messageSent: true\n          });\n          setTimeout(() => {\n            this.setState(prev => _objectSpread({}, prev, {}, initstate));\n            console.log(this.state);\n          }, 3000);\n        }, error => {\n          console.log(error.text);\n        });\n      } else {\n        console.log('Error');\n      }\n    });\n\n    _defineProperty(this, \"setField\", (targetID, textValue) => {\n      console.log('Run');\n      this.setState(() => {\n        return {\n          [targetID]: textValue\n        };\n      });\n      setTimeout(() => {\n        console.log(this.state);\n      }, 300);\n    });\n\n    _defineProperty(this, \"handleErrors\", e => {\n      const error = {};\n\n      if (!this.state.name) {\n        error.name = 'First Name field shouldn’t be empty';\n        this.setState({\n          name: 'First Name field shouldn’t be empty'\n        });\n      }\n\n      if (!this.state.number) {\n        error.number = 'Number field shouldn’t be empty';\n        this.setState({\n          number: 'Number field shouldn’t be empty'\n        });\n      }\n\n      if (!this.state.email) {\n        error.email = 'Email field shouldn’t be empty';\n        this.setState({\n          email: 'Email field shouldn’t be empty'\n        });\n      }\n\n      if (!this.state.message) {\n        error.message = 'Message field shouldn’t be empty';\n        this.setState({\n          message: 'Message field shouldn’t be empty'\n        });\n      }\n\n      if (_Object$keys(error).length === 0) {\n        this.setState({\n          errors: false\n        });\n      } else {\n        this.setState({\n          errors: error\n        });\n        return;\n      }\n    });\n  }\n\n  render() {\n    return __jsx(ProductContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        setValue: this.setField,\n        handleSubmit: this.sendEmail,\n        handleModal: this.handleModal,\n        handleActPackage: this.handleActivePackage,\n        handleActAddOns: this.handleActiveAddOns,\n        handleFinalPackage: this.handleFinalPackage,\n        setBackground: this.setThemeColor,\n        selectAddOn: this.selectAddOn,\n        incrProgress: this.progressIncrement,\n        decrProgress: this.progressDecrement\n      })\n    }, this.props.children);\n  }\n\n}\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer, ProductContext };","map":null,"metadata":{},"sourceType":"module"}