{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\13054\\\\Documents\\\\GitHub\\\\OniDev\\\\components\\\\cards\\\\card.js\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { Card, CardText, CardTitle, Col, Row, CardImg, CardBody, Badge } from 'reactstrap';\nimport { packageImages } from '../../data/image_source';\nimport './card.scss';\nimport Loader from 'react-loader-spinner';\n\nvar domLoaded = require('dom-loaded'); //p = props\n\n\nexport var CardComp = function CardComp(props) {\n  var _useState = useState(true),\n      loading = _useState[0],\n      setloading = _useState[1];\n\n  useEffect(function () {\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return domLoaded;\n\n            case 2:\n              console.log('The DOM is now loaded.');\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }, [loading]);\n  var p = props;\n\n  if (!loading) {\n    return __jsx(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, __jsx(CardImg, {\n      top: true,\n      onLoad: function onLoad() {\n        alert(\"Image Loaded\");\n        setloading(false);\n      },\n      width: \"100%\",\n      src: packageImages.map(function (image, index) {\n        var packageTitle = p.title.toLowerCase();\n\n        if (packageTitle.includes(image.uID)) {\n          return image.src;\n        } else {\n          console.log(p.title, image.uID);\n        }\n      }),\n      alt: \"Card image cap\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }), __jsx(CardBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, __jsx(CardTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, p.title), __jsx(CardText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, p.text, __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }), p.addOns.map(function (addOn) {\n      return __jsx(Badge, {\n        color: \"primary\",\n        pill: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }\n      }, addOn);\n    })), ' '));\n  } else {\n    return __jsx(Loader, {\n      type: \"Triangle\",\n      color: \"#e100ff \",\n      height: 50,\n      width: 50,\n      timeout: 3000,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/13054/Documents/GitHub/OniDev/components/cards/card.js"],"names":["React","useEffect","useState","Card","CardText","CardTitle","Col","Row","CardImg","CardBody","Badge","packageImages","Loader","domLoaded","require","CardComp","props","loading","setloading","console","log","p","alert","map","image","index","packageTitle","title","toLowerCase","includes","uID","src","text","addOns","addOn"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,GAApC,EAAyCC,GAAzC,EAA6CC,OAA7C,EAAqDC,QAArD,EAA8DC,KAA9D,QAA2E,YAA3E;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,OAAO,aAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AACA,IAAMC,SAAS,GAAGC,OAAO,CAAC,YAAD,CAAzB,C,CAEA;;;AACA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAAA,kBACHd,QAAQ,CAAC,IAAD,CADL;AAAA,MAC1Be,OAD0B;AAAA,MACjBC,UADiB;;AAE/BjB,EAAAA,SAAS,CAAC,YAAM;AACb,6DAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACOY,SADP;;AAAA;AAECM,cAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;;AAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAIF,GALQ,EAKN,CAACH,OAAD,CALM,CAAT;AAMH,MAAMI,CAAC,GAAGL,KAAV;;AAEC,MAAI,CAACC,OAAL,EAAc;AACZ,WACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,OAAD;AACE,MAAA,GAAG,MADL;AAEE,MAAA,MAAM,EAAE,kBAAM;AACZK,QAAAA,KAAK,CAAC,cAAD,CAAL;AACAJ,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OALH;AAME,MAAA,KAAK,EAAC,MANR;AAOE,MAAA,GAAG,EAAEP,aAAa,CAACY,GAAd,CAAkB,UAACC,KAAD,EAAQC,KAAR,EAAkB;AACvC,YAAIC,YAAY,GAAGL,CAAC,CAACM,KAAF,CAAQC,WAAR,EAAnB;;AACA,YAAIF,YAAY,CAACG,QAAb,CAAsBL,KAAK,CAACM,GAA5B,CAAJ,EAAsC;AACpC,iBAAON,KAAK,CAACO,GAAb;AACD,SAFD,MAEO;AACLZ,UAAAA,OAAO,CAACC,GAAR,CAAYC,CAAC,CAACM,KAAd,EAAqBH,KAAK,CAACM,GAA3B;AACD;AACF,OAPI,CAPP;AAeE,MAAA,GAAG,EAAC,gBAfN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAkBE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYT,CAAC,CAACM,KAAd,CADF,EAEE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGN,CAAC,CAACW,IADL,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGGX,CAAC,CAACY,MAAF,CAASV,GAAT,CAAa,UAACW,KAAD;AAAA,aACZ,MAAC,KAAD;AAAO,QAAA,KAAK,EAAC,SAAb;AAAuB,QAAA,IAAI,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,KADH,CADY;AAAA,KAAb,CAHH,CAFF,EAUc,GAVd,CAlBF,CADF;AAiCD,GAlCD,MAkCO;AACL,WAAQ,MAAC,MAAD;AACN,MAAA,IAAI,EAAC,UADC;AAEN,MAAA,KAAK,EAAC,UAFA;AAGN,MAAA,MAAM,EAAE,EAHF;AAIN,MAAA,KAAK,EAAE,EAJD;AAKN,MAAA,OAAO,EAAE,IALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AAQD;AACF,CAtDM","sourcesContent":["import React,{useEffect,useState} from 'react';\r\nimport { Card, CardText, CardTitle, Col, Row,CardImg,CardBody,Badge } from 'reactstrap';\r\nimport { packageImages } from '../../data/image_source';\r\nimport './card.scss';\r\nimport Loader from 'react-loader-spinner';\r\nconst domLoaded = require('dom-loaded');\r\n\r\n//p = props\r\nexport const CardComp = (props) => {\r\n  const [loading, setloading] = useState(true)\r\n    useEffect(() => {\r\n       (async () => {\r\n         await domLoaded;\r\n         console.log('The DOM is now loaded.');\r\n       })();\r\n    }, [loading])\r\n const p = props\r\n \r\n  if (!loading) {\r\n    return (\r\n      <Card>\r\n        <CardImg\r\n          top\r\n          onLoad={() => {\r\n            alert(\"Image Loaded\")\r\n            setloading(false)\r\n          }}\r\n          width=\"100%\"\r\n          src={packageImages.map((image, index) => {\r\n            let packageTitle = p.title.toLowerCase();\r\n            if (packageTitle.includes(image.uID)) {\r\n              return image.src;\r\n            } else {\r\n              console.log(p.title, image.uID);\r\n            }\r\n          })}\r\n          alt=\"Card image cap\"\r\n        />\r\n        <CardBody>\r\n          <CardTitle>{p.title}</CardTitle>\r\n          <CardText>\r\n            {p.text}\r\n            <br />\r\n            {p.addOns.map((addOn) => (\r\n              <Badge color=\"primary\" pill>\r\n                {addOn}\r\n              </Badge>\r\n            ))}\r\n          </CardText>{' '}\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  } else {\r\n    return (<Loader\r\n      type=\"Triangle\"\r\n      color=\"#e100ff \"\r\n      height={50}\r\n      width={50}\r\n      timeout={3000}\r\n    />);\r\n    \r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}