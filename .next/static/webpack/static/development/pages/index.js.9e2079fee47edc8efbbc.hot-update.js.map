{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.9e2079fee47edc8efbbc.hot-update.js","sources":["webpack:///./components/cards/card.js"],"sourcesContent":["import React,{useEffect,useState} from 'react';\r\nimport { Card, CardText, CardTitle, Col, Row,CardImg,CardBody,Badge } from 'reactstrap';\r\nimport { packageImages } from '../../data/image_source';\r\nimport './card.scss';\r\nimport Loader from 'react-loader-spinner';\r\nconst domLoaded = require('dom-loaded');\r\n\r\n//p = props\r\nexport const CardComp = (props) => {\r\n  const [loading, setloading] = useState(true)\r\n    const [imageloading, setimageloading] = useState(true);\r\n\r\n    useEffect(() => {\r\n       (async () => {\r\n         await domLoaded;\r\n         setloading(false)\r\n       })();\r\n    }, [loading])\r\n const p = props\r\n \r\n  if (!loading) {\r\n    return (\r\n      <Card>\r\n        {<CardImg\r\n          top\r\n          onLoad={() => {\r\n           \r\n            setimageloading(false)\r\n          }}\r\n          width=\"100%\"\r\n          src={packageImages.map((image, index) => {\r\n            let packageTitle = p.title.toLowerCase();\r\n            if (packageTitle.includes(image.uID)) {\r\n              return image.src;\r\n            } else {\r\n              console.log(p.title, image.uID);\r\n            }\r\n          })}\r\n          alt=\"Card image cap\"\r\n        />}\r\n        <CardBody>\r\n          <CardTitle>{p.title}</CardTitle>\r\n          <CardText>\r\n            {p.text}\r\n            <br />\r\n            {p.addOns.map((addOn) => (\r\n              <Badge color=\"primary\" pill>\r\n                {addOn}\r\n              </Badge>\r\n            ))}\r\n          </CardText>{' '}\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  } else {\r\n    return (<Loader\r\n      type=\"Triangle\"\r\n      color=\"#e100ff \"\r\n      height={50}\r\n      width={50}\r\n      timeout={3000}\r\n    />);\r\n    \r\n  }\r\n};\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;;;;A","sourceRoot":""}