{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.690265bac7ea6a39fb2e.hot-update.js","sources":["webpack:///./containers/contact/index.js","webpack:///./pages/oniContext.js"],"sourcesContent":["import React, { useState,useContext,useEffect } from 'react';\r\nimport { Container, Row, Col, Form, FormGroup } from 'reactstrap';\r\nimport { Subtitle, Description, Title, Titlespan,phoneDescription } from '../../components/common/title/index';\r\nimport Image from '../../components/common/image/index';\r\nimport ContactImg from '../../public/assets/images/contact/contact-us-img.png';\r\nimport InputBox from '../../components/common/input/index';\r\nimport Button from '../../components/common/button';\r\nimport ContactBackgroundImages from '../../data/contact';\r\nimport '../contact/contact.scss';\r\nimport { ProductContext } from '../../pages/oniContext';\r\n\r\nconst initialState = {\r\n  name: '',\r\n  number: '',\r\n  message: '',\r\n  email: '',\r\n  messageSent: false,\r\n};\r\n\r\nfunction Contact(props) {\r\n    const productConsumer = useContext(ProductContext);\r\n\r\n  useEffect(() => {\r\n    console.log(\"ProductContext\", productConsumer)\r\n    productConsumer.setValue('name','Tyrique Daniel')\r\n  }, [ProductContext])\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [message, setMessage] = useState('');\r\n  const [errors, setErrors] = useState({});\r\n    // const { name, email } = productConsumer;\r\n\r\n    // const handelSubmit2 = () => {\r\n    //     const error = {}\r\n    //     if (!name) {\r\n    //         error.name = 'First Name field shouldn’t be empty';\r\n    //     }\r\n    //     if (!email) {\r\n    //         error.email = 'Email field shouldn’t be empty';\r\n    //     }\r\n    //     if (!message) {\r\n    //         error.message = 'Message field shouldn’t be empty';\r\n    //     }\r\n\r\n    //     if (error) {\r\n    //         setErrors(error)\r\n    //     } else {\r\n    //         setName('');\r\n    //         setEmail('');\r\n    //         setMessage('');\r\n    //     }\r\n    // }\r\n\r\n    \r\n    return (\r\n      <section className=\"contact-wrapper\" id=\"contact\">\r\n        <div className=\"contact-animation-images\">\r\n          {ContactBackgroundImages.map((img, index) => (\r\n            <span key={`contact-img-${index}`} className={`image${index + 1}`}>\r\n              <Image Path={img.img} />\r\n            </span>\r\n          ))}\r\n        </div>\r\n        <Container>\r\n          <Row>\r\n            <Col sm={0} md={6}>\r\n              <div className=\"contact-image\">\r\n                <Image Path={ContactImg} Class=\"logo-img\" />\r\n              </div>\r\n            </Col>\r\n            <Col md={6}>\r\n              <div className=\"contact-content-block main-title-wrapper\">\r\n                <Subtitle\r\n                  Class=\"sitemain-subtitle\"\r\n                  Name=\"Send us mesage for any Info\"\r\n                />\r\n                <Subtitle\r\n                  Class=\"site-subtitle2\"\r\n                  Name=\"Call us for a free consultation\"\r\n                />\r\n                <Description\r\n                  Class=\"contact-dec\"\r\n                  Name=\"+1 305 - 204 - 7863\"\r\n                  Num=\"3052047863\"\r\n                />\r\n                <div className=\"form\">\r\n                  <Form method=\"POST\">\r\n                    <FormGroup>\r\n                      <Title Class=\"form-label\" Name=\"Name *\" />\r\n                      <InputBox\r\n                        Type=\"text\"\r\n                        Name=\"name\"\r\n                        PlaceHolder=\"John Doe\"\r\n                        value={productConsumer.name}\r\n                        ChangeValue={() => productConsumer.setValue()}\r\n                        Class={\r\n                          productConsumer.errors &&\r\n                          productConsumer.errors.name &&\r\n                          'error'\r\n                        }\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Title Class=\"form-label\" Name=\"Email *\" />\r\n                      <InputBox\r\n                        Type=\"text\"\r\n                        Name=\"email\"\r\n                        PlaceHolder=\"example@gmail.com\"\r\n                        value={productConsumer.email}\r\n                        ChangeValue={productConsumer.setValue}\r\n                        Class={\r\n                          productConsumer.errors &&\r\n                          productConsumer.errors.email &&\r\n                          'error'\r\n                        }\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Title Class=\"form-label\" Name=\"Message *\" />\r\n                      <InputBox\r\n                        Type=\"textarea\"\r\n                        Name=\"text\"\r\n                        PlaceHolder=\"write your message\"\r\n                        Class={`textbox ${\r\n                          productConsumer.errors &&\r\n                          productConsumer.errors.message &&\r\n                          'error'\r\n                        }`}\r\n                        value={productConsumer.message}\r\n                        ChangeValue={setMessage}\r\n                      />\r\n                    </FormGroup>\r\n                  </Form>\r\n                </div>\r\n                <Button\r\n                  Class=\"button1 btn button2 gradient-color\"\r\n                  Name=\"SUBMIT\"\r\n                  Clickble={productConsumer.handelSubmit}\r\n                  BtnIcon=\"btn-icon\"\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n    );\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\n\r\nconst ProductContext = React.createContext();\r\n\r\n\r\n\r\n class ProductProvider extends Component {\r\n   state = {\r\n     name: '',\r\n     number: '',\r\n     message: '',\r\n     email: '',\r\n       messageSent: false,\r\n       errors: {\r\n         \r\n     },\r\n     addONS: {\r\n       'name': 'price',\r\n       },\r\n     total: 0\r\n   };\r\n\r\n   sendEmail = (e) => {\r\n       e.preventDefault();\r\n       console.log('E Sent');\r\n       return\r\n\r\n    this.handleErrors()\r\n    console.log(this.state);\r\n    emailjs\r\n      .send(\r\n        'default_service',\r\n        'responsive_renovations',\r\n        {\r\n          senderEmail: this.state.email,\r\n          senderName: this.state.name,\r\n          senderMessage: this.state.message,\r\n          senderPhoneNumber: this.state.number,\r\n          receiverEmail: 'responsiverenovations@gmail.com',\r\n        },\r\n        'user_ra9kLqa47SSFhb4QI3Swp'\r\n      )\r\n      .then(\r\n        (result) => {\r\n          console.log(result.text);\r\n         this.setState({messageSent: True})\r\n          setTimeout(() => {\r\n            setstate((prev) => ({\r\n              ...prev,\r\n              ...initialState\r\n            }));\r\n            this.setState((prev) => ({...prev,...initialState}))\r\n          }, 3000);\r\n        },\r\n        (error) => {\r\n          console.log(error.text);\r\n        }\r\n      );\r\n  }\r\n     setField = (e) => {\r\n       const target = e.target;\r\n       const value = target.value;\r\n       const name = target.name;\r\n     console.log('Run');\r\n     this.setState((prev) => {\r\n       return {\r\n         ...prev,\r\n         [targetID]: textValue,\r\n       };\r\n     });\r\n     setTimeout(() => {\r\n       console.log(this.state);\r\n     }, 300);\r\n   };\r\n\r\n     handleErrors = (e) => {\r\n         \r\n\r\n       const error = {};\r\n          if (!this.state.name) {\r\n              error.name = 'First Name field shouldn’t be empty';\r\n              this.setField('name',error.name);\r\n          }\r\n          if (!this.state.email) {\r\n              error.email = 'Email field shouldn’t be empty';\r\n              this.setField('email', error.name);\r\n          }\r\n          if (!this.state.message) {\r\n              error.message = 'Message field shouldn’t be empty';\r\n              this.setField('message', error.name);\r\n          }\r\n\r\n          if (this.state.error) {\r\n            setErrors(this.state.error);\r\n          } else {\r\n            pass\r\n         }\r\n         if (!error) {\r\n             pass\r\n         } else {\r\n             return\r\n         }\r\n     };\r\n\r\n   render() {\r\n     return (\r\n       <ProductContext.Provider\r\n         value={{\r\n           ...this.state,\r\n           setValue: this.setField,\r\n           handleSubmit: this.sendEmail\r\n         }}\r\n       >\r\n         {this.props.children}\r\n       </ProductContext.Provider>\r\n     );\r\n   }\r\n }\r\n\r\nconst ProductConsumer = ProductContext.Consumer;\r\n\r\nexport { ProductProvider, ProductConsumer, ProductContext };\r\n"],"mappings":"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","sourceRoot":""}